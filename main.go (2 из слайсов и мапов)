//Zadacha 2
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥? [1 2 3 5] [1 2 3 4]

package main

import "fmt"

var foo []int
var bar []int

func main() {
foo = append(foo, 1) // [1]
foo = append(foo, 2) // [1 2]
foo = append(foo, 3) // [1 2 3]
bar = append(foo, 4) // bar = [1 2 3 4]
foo = append(foo, 5) // foo = [1 2 3 5]

fmt.Println(foo, bar)
}

/*

–ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —á—Ç–æ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –º—ã –∫–∞–ø–Ω–µ–º –≥–ª—É–±–∂–µ
–í Go slice - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ '–æ–∫–Ω–æ' –≤ –º–∞—Å—Å–∏–≤. –ï—Å–ª–∏ —Ç—ã –∏–∑–º–µ–Ω—è–µ—à—å –º–∞—Å—Å–∏–≤ - —ç—Ç–æ –º–æ–∂–µ—Ç 
–ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –≤—Å–µ —Å—Ä–µ–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞ –Ω–µ–≥–æ —Å—Å—ã–ª–∞—é—Ç—Å—è 

–ü–æ—à–∞–≥–æ–≤–æ–π —Ä–∞–∑–±–æ—Ä :
1 foo = append(foo, 1)
 foo —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è [1]
 G–æ —Å–æ–∑–¥–∞–µ—Ç –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –º–∞—Å—Å–∏–≤ –∏ –∫–ª–∞–¥–µ—Ç —Ç—É–¥–∞ 1
2 foo = append(foo, 2)
 foo - [1 2]
3 foo = append(foo, 3)
 foo - [1 2 3]
 –í –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç go —Ä–∞—Å—à–∏—Ä—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–∏–∏–π –º–∞—Å—Å–∏–≤ –∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Ç—É–¥–∞ —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. 
 –¢–µ–ø–µ—Ä—å foo —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –º–∞—Å—Å–∏–≤, —Å–∫–∞–∂–µ–º: [1 2 3 _ _ _] (–∑–∞–ø–∞—Å –ø–æ –µ–º–∫–æ—Å—Ç–∏ - capacity)
4 bar = append(foo, 4)
 –º—ã –±–µ—Ä–µ–º foo ([1 2 3]) –∏ –¥–µ–ª–∞–µ–º append(foo, 4)
 bar —Ç–µ–ø–µ—Ä—å [1 2 3 4]
 –í–∞–∂–Ω–æ: bar and foo –ø–æ–∫–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤ –≤ –ø–∞–º—è—Ç–∏ (—É –Ω–∏—Ö –æ–±—â–∏–π 
 –±–∞–∑–æ–≤—ã–π –º–∞—Å—Å–∏–≤)
5 foo = append(foo, 5)
 –¥–æ–±–∞–≤–ª—è–µ–º 5 –≤ foo —Ç–µ–ø–µ—Ä—å foo [1 2 3 5]
 —ç—Ç–æ –≤—Å–µ –µ—â–µ —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤ —á—Ç–æ –∏ —É bar 
 –Ω–æ bar —É–∂–µ –æ—Ç—Ä–µ–∑–∞–Ω –¥–ª–∏–Ω–æ–π 4 –æ–Ω –ø–æ–º–Ω–∏—Ç —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ [1 2 3 4]

*/

------------------------------------------------------------------------------------------------
//Zadacha 2.2
//–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥?
//–û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É —Ç–∞–∫ –ø–æ–ª—É—á–∏–ª–æ—Å—å.

package main

import "fmt"

func main() {
    a := []int{10, 20, 30}
    b := a[:2]        // b = [10 20]
    c := append(b, 99) // c = ? 10 20 30 90

    a[1] = 88          // –ú–µ–Ω—è–µ–º a[1] //[77 88 30 90]
    c[0] = 77          // –ú–µ–Ω—è–µ–º c[0]

    fmt.Println("a:", a)
    fmt.Println("b:", b)
    fmt.Println("c:", c)
}

//–≤—ã–≤–æ–¥ : 
//a : 77 88 99
//b : 77 88
//c : 77 88 99


//–ø–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å ?
//üëâ –ü–æ—Ç–æ–º—É —á—Ç–æ slice –∏ —Ç–∞–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –º–∞—Å—Å–∏–≤. 
//–≠—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–æ. append –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç–æ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å, –∏, –µ—Å–ª–∏ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ (capacity), 
//–ø—Ä–æ—Å—Ç–æ –¥–æ–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤.

//–ü–æ—á–µ–º—É a[1] = 88 –∏ c[0] = 77 –ø–æ–≤–ª–∏—è–ª–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Å—Ä–µ–∑—ã?
//üëâ –ü–æ—Ç–æ–º—É —á—Ç–æ –≤—Å–µ —Å—Ä–µ–∑—ã a, b, c —Å–º–æ—Ç—Ä—è—Ç –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤. 
//–ö–æ–≥–¥–∞ —Ç—ã –º–µ–Ω—è–µ—à—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É, —Ç—ã –º–µ–Ω—è–µ—à—å —Å–∞–º –º–∞—Å—Å–∏–≤. –ò –≤—Å–µ —Å—Ä–µ–∑—ã —ç—Ç–æ –≤–∏–¥—è—Ç.

//–ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º  +- –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ–Ω—è—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç cap
/*
–ß—Ç–æ —Ç–∞–∫–æ–µ cap? - —Å–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –≤–º–µ—Å—Ç–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (–µ–º–∫–æ—Å—Ç—å)

//Zadacha 1.3
//Capacity check 

------------------------------------------------------------------------------------------------
package main 

import "fmt"

func main() {
s := []int {1, 2, 3}
t := append(s, 4)
s[0] = 99


fmt.Println("s:", s) //s = 99 2 3
fmt.Println("t:", t) //99 2 3 4
}








